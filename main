import 'dart:async';
import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

Future<List<Marca>> fetchMarca() async {
  final response =
      await http.get(Uri.parse('https://arquivos.ectare.com.br/marcas.json'));

  if (response.statusCode == 200) {
    return (json.decode(utf8.decode(response.bodyBytes)) as List)
        .map((i) => Marca.fromJson(i))
        .toList();
  } else {
    throw Exception('Failed to load Marca');
  }
}

class Marca {
  final String nome;
  final String setor;
  final int fundacao;
  final String paisOrigem;

  Marca({
    required this.nome,
    required this.setor,
    required this.fundacao,
    required this.paisOrigem,
  });

  factory Marca.fromJson(Map<String, dynamic> json) {
    return Marca(
      nome: json['nome'],
      setor: json['setor'],
      fundacao: json['fundacao'],
      paisOrigem: json['pais_origem'],
    );
  }
}

void main() => runApp(MyApp());

class MyApp extends StatefulWidget {
  @override
  _MyAppState createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  late Future<List<Marca>> futureMarca;

  @override
  void initState() {
    super.initState();
    futureMarca = fetchMarca();
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Marcas Mundiais',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      home: Scaffold(
        appBar: AppBar(
          title: const Text(
            'Marcas Mundiais',
            style: TextStyle(
              fontWeight: FontWeight.bold,
              fontSize: 20,
            ),
          ),
          centerTitle: true,
          backgroundColor: Colors.blueAccent,
        ),
        body: Container(
          color: Colors.grey[200],
          padding: const EdgeInsets.all(16.0),
          child: Center(
            child: FutureBuilder<List<Marca>>(
              future: futureMarca,
              builder: (context, snapshot) {
                if (snapshot.connectionState == ConnectionState.waiting) {
                  return CircularProgressIndicator();
                } else if (snapshot.hasError) {
                  return Text(
                    'Erro: ${snapshot.error}',
                    style: TextStyle(
                      color: Colors.red,
                      fontSize: 16,
                    ),
                  );
                } else {
                  final data = snapshot.data!;
                  return Card(
                    elevation: 5,
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(15),
                    ),
                    child: SingleChildScrollView(
                      scrollDirection: Axis.vertical,
                      child: SingleChildScrollView(
                        scrollDirection: Axis.horizontal,
                        child: DataTable(
                          columnSpacing: 20,
                          headingRowColor: MaterialStateColor.resolveWith(
                              (states) => Colors.blueAccent),
                          dataRowColor: MaterialStateColor.resolveWith(
                              (states) => Colors.white),
                          border: TableBorder.all(
                            color: Colors.grey.shade300,
                            width: 1,
                          ),
                          columns: [
                            DataColumn(
                              label: Text(
                                'Nome',
                                style: TextStyle(
                                  color: Colors.white,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ),
                            DataColumn(
                              label: Text(
                                'Setor',
                                style: TextStyle(
                                  color: Colors.white,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ),
                            DataColumn(
                              label: Text(
                                'Fundação',
                                style: TextStyle(
                                  color: Colors.white,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ),
                            DataColumn(
                              label: Text(
                                'País de Origem',
                                style: TextStyle(
                                  color: Colors.white,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                            ),
                          ],
                          rows: data
                              .map(
                                (marca) => DataRow(
                                  cells: [
                                    DataCell(Text(
                                      marca.nome,
                                      style: TextStyle(fontSize: 14),
                                    )),
                                    DataCell(Text(
                                      marca.setor,
                                      style: TextStyle(fontSize: 14),
                                    )),
                                    DataCell(Text(
                                      marca.fundacao.toString(),
                                      style: TextStyle(fontSize: 14),
                                    )),
                                    DataCell(Text(
                                      marca.paisOrigem,
                                      style: TextStyle(
                                          fontSize: 14,
                                          fontStyle: FontStyle.italic),
                                    )),
                                  ],
                                ),
                              )
                              .toList(),
                        ),
                      ),
                    ),
                  );
                }
              },
            ),
          ),
        ),
      ),
    );
  }
}
